AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  stroll-backend-stack

  Sample SAM Template for stroll-backend-stack

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Layers:
      - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14"

Parameters:
  FirebaseProjectId:
    Type: String

Resources:
  AccessLogGroup:
    Type: AWS::Logs::LogGroup

  AuthGatewayHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      # AccessLogSettings:
      #   DestinationArn: !GetAtt AccessLogGroup.Arn
      #   Format: '{ "requestId":"$context.requestId", \
      #         "ip": "$context.identity.sourceIp"}'
      Auth:
        Authorizers:
          FirebaseAuthorizer:
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              audience:
                - !Ref FirebaseProjectId
              issuer: !Sub https://securetoken.google.com/${FirebaseProjectId}
        DefaultAuthorizer: FirebaseAuthorizer
      StageName: "Prod"

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Events:
        Gateway:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            ApiId: !Ref AuthGatewayHttpApi
            Path: /hello
            Method: get

  GenerateRouteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: generate-route/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 100
      Events:
        Gateway:
          Type: HttpApi
          Properties:
            ApiId: !Ref AuthGatewayHttpApi
            Path: /generate-route
            Method: post
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy

  GetHeatmapDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-heatmap-data/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 100
      Events:
        Gateway:
          Type: HttpApi
          Properties:
            ApiId: !Ref AuthGatewayHttpApi
            Path: /get-heatmap-data
            Method: post
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
